[{"fields": {"name": "Ad Auction Port", "admin_css": "body {\r\n  padding-top: 60px;\r\n}\r\n\r\n", "comments": "", "experimenter": 1, "admin_html": "<!DOCTYPE HTML>\r\n<html ng-app=\"Redwood\">\r\n  <head>\r\n    <title>Ad Auction Port Admin</title>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/jquery/jquery.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/bootstrap/bootstrap-3.1.1.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/angular/angular-1.2.16.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodCore.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodHelpers.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodAdmin.js\"></script>\r\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"{{ STATIC_URL }}framework/css/bootstrap.min.css\"></link>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t\t{{ js }}\r\n\t\t</script>\r\n\t\t<style type=\"text/css\">\r\n\t\t\t{{ css }}\r\n\t\t</style>\r\n\t</head>\r\n\t<body ng-controller=\"AdminCtrl\">\r\n\t\t<div class=\"navbar navbar-fixed-top container\">\r\n\t\t\t<div class=\"navbar-inner\">\r\n\t\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t\t<div class=\"brand\" href=\"#\">Economics Experiment</div>\r\n\t\t\t\t\t<div class=\"nav-collapse collapse\">\r\n\t\t\t\t\t\t<p class=\"navbar-text pull-right\">Administrator</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"span3\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"span3\">\r\n\t\t\t\t\t\t\t<div class=\"well sidebar-nav\">\r\n\t\t\t\t\t\t\t\t<ul class=\"nav nav-list\">\r\n\t\t\t\t\t\t\t\t\t<li><span id=\"router-status\" class=\"badge badge-important\"></span></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"span3\">\r\n\t\t\t\t\t\t\t<div class=\"well sidebar-nav\">\r\n\t\t\t\t\t\t\t\t<ul class=\"nav nav-list\">\r\n\t\t\t\t\t\t\t\t\t<li><a href=\"admin/payouts\" target=\"_blank\">View Payouts</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a id=\"archive\" href=\"#\">Archive Session</a></li>\r\n\t\t\t\t\t\t\t\t\t<li><a id=\"download\" href=\"admin/download\">Download Data</a></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!--\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"span3\">\r\n\t\t\t\t\t\t\t<div class=\"well sidebar-nav\">\r\n\t\t\t\t\t\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-primary\" id=\"set_group\" >Set Groups</button>\r\n\t\t\t\t\t\t            <button type=\"button\" class=\"btn btn-danger\"  id=\"set_period\">Start Period</button>\r\n\t\t\t\t\t\t        </div>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t-->\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"span3\">\r\n\t\t\t\t\t\t\t<div class=\"well sidebar-nav\">\r\n\t\t\t\t\t\t\t\t<div class=\"btn-group\" data-toggle=\"buttons-radio\">\r\n\t\t\t\t\t              <button id=\"gsp-button\" type=\"button\" class=\"btn btn-large btn-primary\">GSP</button>\r\n\t\t\t\t\t              <button id=\"vcg-button\" type=\"button\" class=\"btn btn-large btn-primary\">VCG</button>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"span9\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"span9\">\r\n\t\t\t\t\t\t\t<p>Subjects:</p>\r\n\t\t\t\t\t\t\t<table class=\"table table-bordered table-condensed table-striped\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr><th>ID</th><th>Group</th><th>Period</th><th style=\"width: 150px;\"></th></tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody id=\"subject-list\">\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"span6\">\r\n\t\t\t\t\t\t\t<button id=\"start-session\" class=\"btn btn-success\">Start Session</button>\r\n\t\t\t\t\t\t\t<button id=\"refresh-subjects\" class=\"btn btn-info\" title=\"Attempt recover by refreshing all subject browsers\">Recover Session</button>\r\n\t\t\t\t\t\t\t<button id=\"reset-session\" class=\"btn btn-danger\">Reset Session</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"span3\">\r\n\t\t\t\t\t\t\t<div class=\"pull-right\">\r\n\t\t\t\t\t\t\t\t<button id=\"pause-session\" class=\"btn btn-warning\" disabled=\"disabled\">Pause</button>\r\n\t\t\t\t\t\t\t\t<button id=\"resume-session\" class=\"btn btn-primary\" disabled=\"disabled\">Resume</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row\" style=\"padding-top:10px;\">\r\n\t\t\t\t\t  <div class=\"span6\">\r\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"set_group\" >Set Groups</button>\r\n\t            <button type=\"button\" class=\"btn btn-success\"  id=\"set_period\">Start Period</button>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"span12\">\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<p>Configuration:</p>\r\n\t\t\t\t\t<load-config></load-config>\r\n\t\t\t\t\t<div style=\"overflow: auto;\">\r\n\t\t\t\t\t\t<table class=\"config table table-bordered table-striped table-condensed\"></table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t</body>\r\n</html>\r\n", "admin_js": "Redwood.controller(\"AdminCtrl\", [\"$rootScope\", \"$scope\", \"Admin\", function($rootScope, $scope, ra) {\r\n    var Display = { //Display controller\r\n      initialize: function() {\r\n\r\n        console.log(ra);\r\n        var auction_type = \"GSP\";\r\n        var group_size = 4;\r\n        var new_period = 1;\r\n        \r\n        var new_keep = \"Subject-1@leeps.ucsc.edu\";\r\n        var group = 1;\r\n        \r\n        $(\"#gsp-button\").click(function() {\r\n        \tsetAuction = true;\r\n          auction_type = \"GSP\";\r\n          ra.trigger(\"change_auction_type\", {auction_type: \"GSP\"});\r\n          $(\"#vcg-button\").removeClass(\"active\");\r\n          \r\n        });\r\n        \r\n        $(\"#vcg-button\").click(function() {\r\n        \tsetAuction = true;\r\n          auction_type = \"VCG\";\r\n          ra.trigger(\"change_auction_type\", {auction_type: \"VCG\"});\r\n          $(\"#gsp-button\").removeClass(\"active\");\r\n          \r\n        });\r\n        \r\n        $(\"#start-session\").click(function () {\r\n          \r\n        \tif (!setGroups) {\r\n        \t\talert(\"Please set groups before starting the experiment!\");\r\n        \t\treturn;\r\n        \t}\r\n        \tif (!setAuction) {\r\n        \t\talert(\"Please set the auction type before starting the experiment!\");\r\n        \t\treturn;\r\n        \t}\r\n          $(\"#start-session\").attr(\"disabled\", \"disabled\");\r\n          ra.trigger(\"start_session\");\r\n          new_period++;\r\n          $(\"#set_period\").html(\"Start Period: \" + new_period);\r\n        });\r\n  \r\n        ra.on(\"start_session\", function() {\r\n          $(\"#start-session\").attr(\"disabled\", \"disabled\");\r\n          $(\"#pause-session\").removeAttr(\"disabled\");\r\n        });\r\n  \r\n        $(\"#refresh-subjects\").click(function () {\r\n          $(\"#refresh-subjects\").attr(\"disabled\", \"disabled\");\r\n          ra.refreshSubjects().then(function() {\r\n            $(\"#refresh-subjects\").removeAttr(\"disabled\");\r\n          });\r\n        });\r\n  \r\n        $(\"#reset-session\").click(function () {\r\n          ra.reset();\r\n        });\r\n  \r\n        $(\"#pause-session\").click(function () {\r\n          $(\"#pause-session\").attr(\"disabled\", \"disabled\");\r\n          ra.trigger(\"pause\");\r\n        });\r\n        ra.on(\"pause\", function() {\r\n          $(\"#pause-session\").attr(\"disabled\", \"disabled\");\r\n        });\r\n  \r\n        $(\"#resume-session\").click(function () {\r\n          $(\"#resume-session\").attr(\"disabled\", \"disabled\");\r\n          ra.trigger(\"resume\");\r\n        });\r\n        ra.on(\"resume\", function() {\r\n          $(\"#resume-session\").attr(\"disabled\", \"disabled\");\r\n          $(\"#pause-session\").removeAttr(\"disabled\");\r\n        });\r\n  \r\n        ra.on_subject_paused(function(userId) {\r\n          $(\"#pause-session\").attr(\"disabled\", \"disabled\");\r\n          $(\"tr.subject-\" + userId).addClass(\"warning\"); //Display current period for each user\r\n          $(\"tr.subject-\" + userId + \" :nth-child(4)\").text(\"Paused\"); //Display current period for each user\r\n        });\r\n  \r\n        ra.on_all_paused(function() {\r\n          $(\"#resume-session\").removeAttr(\"disabled\");\r\n        });\r\n  \r\n        ra.on_subject_resumed(function(user) {\r\n          $(\"tr.subject-\" + user).removeClass(\"warning\"); //Display current period for each user\r\n          $(\"tr.subject-\" + user + \" :nth-child(4)\").text(\"\"); //Display current period for each user\r\n        });\r\n  \r\n        $(\"#archive\").click(function () {\r\n          var r = confirm(\"Are you sure you want to archive this session?\");\r\n          if(r == true) {\r\n            ra.delete_session();\r\n          }\r\n        });\r\n        \r\n\t  \t\t//$(\"#auction_type_modal\").modal({});\r\n\t  \r\n\t\t\t      \r\n\t\t\t$(\"#set_group\").click(function() {\r\n\t\t\t  ra.trigger(\"do_lottery\");\r\n\t\t\t  //resetGroups();\r\n\t\t\t});\r\n\r\n\t\t\t$(\"#set_period\").click(function() {\r\n\t\t\t  \tif(new_period !== 0 && new_period !== undefined && new_period !== null && ra.subjects.length > 0){\r\n\t\t\t\t    //do_lottery();\r\n\t\t\t\t   \tfor(var i = 0, l = ra.subjects.length; i < l; i++) {\r\n\t\t              ra.set_period(new_period, ra.subjects[i].user_id);\r\n\t\t            }\r\n\t\t\t\t    ++new_period;\r\n\t\t\t   }\r\n\t\t\t   $(\"#set_period\").html(\"Start Period: \" + new_period);\r\n\t  \t});\r\n\t  \t\t\r\n\t\t\tra.on_router_connected(function(connected) { //Display router connection status\r\n\t\t\t\tvar status = $(\"#router-status\");\r\n\t\t\t\tif (connected) {\r\n\t\t\t\t\tstatus.text(\"Router Connected\");\r\n\t\t\t\t\tstatus.removeClass(\"badge-important\");\r\n\t\t\t\t\tstatus.addClass(\"badge-success\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatus.text(\"Router Disconnected\");\r\n\t\t\t\t\tstatus.removeClass(\"badge-success\");\r\n\t\t\t\t\tstatus.addClass(\"badge-important\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t  \tra.on_set_period(function(user, period) {\r\n\t\t\t\t$(\"tr.subject-\" + user + \" :nth-child(3)\").text(period); //Display current period for each user\r\n\t\t\t});\r\n\r\n\t\t\tra.on_set_group(function(user, group) {\r\n\t\t\t\t$(\"tr.subject-\" + user + \" :nth-child(2)\").text(group); //Display group for each user\r\n\t\t\t});\r\n\r\n\t  \tra.on_set_config(function(config) { //Display the config file\r\n\t\t\t\t$(\"table.config\").empty();\r\n\t\t\t\tvar a = $.csv.toArrays(config);\r\n\t\t\t\tfor (var i = 0; i < a.length; i++) {\r\n\t\t\t\t\tvar row = a[i];\r\n\t\t\t\t\tvar tr = $(\"<tr>\");\r\n\t\t\t\t\tfor (var j = 0; j < row.length; j++) {\r\n\t\t\t\t\t\tvar cell = row[j];\r\n\t\t\t\t\t\tvar td = $((i == 0 ? \"<th>\" : \"<td>\")).text(cell);\r\n\t\t\t\t\t\ttr.append(td);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$(\"table.config\").append(tr);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tra.on_register(function(user) { //Add a row to the table to each user\r\n\t\t\t\t$(\"#subject-list\").empty();\r\n\t\t\t\tfor(var i = 0, l = ra.subjects.length; i < l; i++) {\r\n\t\t\t\t\t$(\"#subject-list\").append($(\"<tr>\").addClass(\"subject-\" + ra.subjects[i].user_id).append(\r\n\t\t\t\t\t\t$(\"<td>\").text(ra.subjects[i].user_id).after(\r\n\t\t\t\t\t\t\t$(\"<td>\").text(0).after(\r\n\t\t\t\t\t\t\t\t$(\"<td>\").text(0).after(\r\n\t\t\t\t\t\t\t\t\t$(\"<td>\").text(\"\"))))));\r\n\t\t\t\t}\r\n\t\t\t\tra.trigger(\"do_lottery\");\r\n\t\t\t});\r\n  \t\t}\r\n  \t};\r\n\r\n  \tvar resetGroups = function() {\r\n\t\tvar config = ra.get_config(1, 0) || {};\r\n\t\tfor (var i = 0; i < ra.subjects.length; i++) { //set all subjects to group 1 (this is so that matching can be changed per period)\r\n\t\t\tif($.isArray(config.groups)) {\r\n\t\t\t\tfor(var groupId = 0; groupId < config.groups.length; groupId++) {\r\n\t\t\t\t\tif($.isArray(config.groups[groupId])) {\r\n\t\t\t\t\t\tif(config.groups[groupId].indexOf(parseInt(ra.subjects[i].user_id)) > -1) { //Nested group array\r\n\t\t\t\t\t\t\tra.set_group(groupId + 1, ra.subjects[i].user_id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tra.set_group(1, ra.subjects[i].user_id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tra.set_group(1, ra.subjects[i].user_id);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tDisplay.initialize();\r\n\r\n\tra.on_load(function () {\r\n\t\tresetGroups(); //Assign groups to users\r\n\t});\r\n\r\n\tra.on_register(function(user) { //Add a row to the table to each user\r\n\t\tresetGroups();\r\n\t});\r\n\r\n\tra.on(\"start_session\", function() {\r\n\t\tra.start_session();\r\n\t});\r\n\r\n\tra.on(\"pause\", function() {\r\n\t\tra.pause();\r\n\t});\r\n\r\n\tra.on(\"resume\", function() {\r\n\t\tra.resume();\r\n\t});\r\n\r\n\tvar auction_type = \"GSP\";\r\n\tvar group_size = 4;\r\n\tvar new_period = 2;\r\n  \tvar group = 1;\r\n  \tvar setGroups = false; //Makes sure the admin clicks set groups before starting the game.\r\n  \tvar setAuction = false;\r\n\t/*\r\n\t* randomly select subjects to be part of a new group\r\n\t*/\r\n\tra.on(\"do_lottery\" , function () {\r\n\t\tsetGroups = true;\r\n\t    var i = 0;\r\n\t    var tmp = [];\r\n\t    \r\n\t    for(var i = 0, l = ra.subjects.length; i < l; i++) {\r\n\t      var subj = {};\r\n\t      subj.userid = ra.subjects[i].user_id;\r\n\t      subj.a = 0;\r\n\t      tmp.push(subj);\r\n\t    }\r\n\r\n\t    \r\n\t    var curr_group = 1;\r\n\t    var count = 0;\r\n\t    while(count != tmp.length){\r\n\t      var rand = Math.floor(Math.random() * (tmp.length));\r\n\t      if(tmp[rand].a === 0){\r\n\t        tmp[rand].a = 1;\r\n\t        \r\n\t        ra.set_group(curr_group, tmp[rand].userid);\r\n\t        count++;\r\n\t        if((count % group_size === 0) && count !== 0) curr_group++;\r\n\t      }\r\n\t    }\r\n\t});\r\n\r\n}]);\r\n", "rt_js": ""}, "model": "expecon.experiment", "pk": 2}, {"fields": {"experiment": 2, "html": "{% load verbatim %}\r\n<!DOCTYPE HTML>\r\n<html ng-app=\"Redwood\">\r\n\t<head>\r\n\t\t<title>Wait</title>\r\n\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/jquery/jquery.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/bootstrap/bootstrap-3.1.1.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/angular/angular-1.2.16.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodCore.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodHelpers.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodSubject.js\"></script>\r\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"{{ STATIC_URL }}framework/css/bootstrap-3.1.1.min.css\"/>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t\t{{ js }}\r\n\t\t</script>\r\n\t\t<style type=\"text/css\">\r\n\t\t\t{{ css }}\r\n\t\t</style>\r\n\t</head>\r\n{% verbatim %}\r\n\t<body ng-controller=\"SubjectCtrl\">\r\n\t\t\r\n\t\t<div class=\"navbar navbar-fixed-top container\">\r\n\t\t\t<div class=\"navbar navbar-default\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<div class=\"navbar-brand\" href=\"#\">Economics Experiment</div>\r\n\t\t\t\t<ul class=\"nav navbar-nav\">\r\n\t\t\t\t\t<li class=\"active\">\r\n\t\t\t\t\t\t<a>User ID: <span>{{ $root.user_id }}</span></a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-lg-12\">\r\n\t\t\t\t\tPlease wait for experiment to start...\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</body>\r\n{% endverbatim %}\r\n</html>\r\n\r\n", "name": "Wait", "css": "body {\r\n  padding-top: 60px;\r\n}\r\n\r\n", "js": "Redwood.controller(\"SubjectCtrl\", [\"$rootScope\", \"$scope\", \"RedwoodSubject\", function($rootScope, $scope, rs) {\r\n\trs.on_load(function() {\r\n\t\trs.next_period();\r\n\t});\r\n}]);\r\n\r\n"}, "model": "expecon.page", "pk": 4}, {"fields": {"experiment": 2, "html": "{% load verbatim %}\r\n<!DOCTYPE HTML>\r\n<html ng-app=\"Redwood\">\r\n  <head>\r\n    <title>Start</title>\r\n\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/jquery/jquery.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/bootstrap/bootstrap-3.1.1.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/angular/angular-1.2.16.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodCore.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodHelpers.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodSubject.js\"></script>\r\n    <script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/synchronizedStopWatch.js\"></script>\r\n    \r\n    <script language=\"javascript\" type=\"text/javascript\" src=\"{{ STATIC_URL}}framework/js/lib/flot/jquery.flot.js\"></script>\r\n    <script language=\"javascript\" type=\"text/javascript\" src=\"{{ STATIC_URL}}framework/js/lib/flot/jquery.flot.selection.js\"></script>\r\n    \r\n    <script src=\"{{ STATIC_URL}}experiments/AdAuction/simple-slider.js\"></script>\r\n    <link href=\"{{ STATIC_URL}}experiments/AdAuction/simple-slider.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n    <link href=\"{{ STATIC_URL}}experiments/AdAuction/simple-slider-volume.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n\t\t\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"{{ STATIC_URL }}framework/css/bootstrap-3.1.1.min.css\"></link>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t\t{{ js }}\r\n\t\t</script>\r\n\t\t<style type=\"text/css\">\r\n\t\t\t{{ css }}\r\n\t\t</style>\r\n\t</head>\r\n{% verbatim %}\r\n\t<body ng-controller=\"SubjectCtrl\">\r\n    <div class='container'>\r\n  \t\t<!-- Modal -->\r\n      <div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n      \r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\"> \r\n            <div class=\"modal-body\">\r\n              <p>Please wait... A new round will begin shortly.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n  \t\t<div class=\"navbar navbar-fixed-top container\">\r\n  \t\t\t<div class=\"navbar navbar-default\" style=\"margin-bottom: 0;\">\r\n  \t\t\t\t<div class=\"navbar-brand\" href=\"#\">Economics Experiment</div>\r\n  \t\t\t\t<ul class=\"nav navbar-nav\" id = \"nav\">\r\n  \t\t\t\t\t<li class=\"active\">\r\n  \t\t\t\t\t\t<a>User ID: <span>{{ $root.user_id }}</span></a>\r\n  \t\t\t\t\t</li>\r\n  \t\t\t\t</ul>\r\n  \t\t\t</div>\r\n  \t\t</div>\r\n  \t\t\r\n  \t\t<div class=\"row marketing\" align=\"center\">\r\n        <div class=\"span6\">\r\n          \r\n          \r\n          <div class=\"progress\" style=\"text-align: left;\">\r\n            <div id=\"progressbar\" class=\"progress-bar progress-bar-striped active\" style=\"width: 0%\"></div>\r\n          </div>\r\n          <h2 id=\"adv_slot\" align = \"left\"></h4>\r\n\r\n\r\n          <div class='row'>\r\n            <div class='col-md-2'>\r\n              <div class=\"well\">\r\n                  <h4 id=\"vpc_slot\" align = \"left\">Value Per Item: -</h4>\r\n                  <hr>\r\n                  <h4 id=\"all_vpc\" align = \"left\">Others' Values Per Item: -</h4>\r\n                  <hr>\r\n                  <h4 id=\"ctr_slot\" align = \"left\">Items per Bundle: -</h4>\r\n                  <hr>\r\n                  <h4 id=\"time_slot\" align = \"left\">Time Remaining: </h4>\r\n                  <hr>\r\n                  <h4 id=\"pay_slot\" align = \"left\">Cumulative Payoff: </h4>\r\n                  <hr>\r\n                  <h4 id=\"timekeeper\" align = \"left\"></h4>\r\n                  <hr>\r\n                  <h3 id=\"error\"></h3>\r\n                  <hr>\r\n                  <h3 id=\"p_bid\"></h3>\r\n              </div>\r\n            </div>\r\n            <div class='col-md-4'>\r\n              <div class=\"demo-container\" >\r\n                      <div id=\"placeholder\" style=\"height:550px; width:100%\" class=\"demo-placeholder\">  </div>\r\n                  </div>\r\n                  <h4 align = \"center\"> Bid Amount</h4>\r\n                  <div class='slider-wrapper'>\r\n                    <input id=\"slider\" data-slider=\"true\" data-slider-range=\"0,100\">\r\n                  </div>\r\n                  \r\n                  <p align=\"left\"> Move slider to set a bid amount &shy; &shy; &shy; &shy;\r\n                  <input id=\"bidamnt\" type=\"integer\" value=\"\" style=\"text-align: right; width:3em\" onkeyup=\"if (event.keyCode == 13) document.getElementById('sub_bid').click()\"> <span id=\"bidamnt\">\r\n\r\n                  <button input id=\"sub_bid\" type=\"button\">Bid</button></p>\r\n                  <input id=\"hbid\" type=\"integer\" value=\"\" style=\"text-align: right; width:3em; display: none;\"> <span id=\"hbid\">\r\n                  <h3 align=\"left\" id=\"notice\"></h3>\r\n                  <p align=\"left\">\r\n                  </p>\r\n                  \r\n            </div>\r\n            <div class='col-md-1' id='payoffdiv'>\r\n              <h4>&shy;&shy; Payoff  &shy;&shy; </h4>\r\n                  <p id = \"arrow\" style=\"padding-top: 275px;\">\r\n                    <img border=\"0\" src=\"http://econlab.ucsc.edu/redwood/static/slickgrid/images/arrow.png\" width=\"61\" height=\"76\">\r\n                  </p>\r\n                  <p id = \"arrow2\" style=\"padding-top: 275px;\">\r\n                      <img border=\"0\" src=\"http://econlab.ucsc.edu/redwood/static/slickgrid/images/spacer.png\" width=\"61\" height=\"76\">\r\n                  </p>\r\n            </div>\r\n            <div class='col-md-4'>\r\n              <div class=\"demo-container\" >\r\n                    <div id=\"placeholder2\" style=\"height:550px; width:100%\" class=\"demo-placeholder\">  </div>\r\n                  </div>\r\n                  <h4 align = \"center\"> Time </h4>\r\n                  <h4> &nbsp; </h4>\r\n            </div>\r\n          </div>\r\n                       \r\n          \r\n\r\n       \r\n        </div>\r\n      </div>\r\n    \r\n    \r\n    \r\n        <div class=\"footer\" align=\"center\">\r\n        </div>\r\n    \r\n    </div>\r\n\t</body>\r\n{% endverbatim %}\r\n</html>\r\n\r\n", "name": "Start", "css": "body {\r\n  padding-top: 60px;\r\n}\r\nh4 {\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  font-size: 14px;\r\n  display: table-cell;\r\n  vertical-align: center;\r\n}\r\n\r\n.slider {\r\n  width: 100%;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  min-height: 16px;\r\n  margin-left: 8px;\r\n  margin-right: 35px;\r\n}\r\n.slider-wrapper {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  margin-right: 43px;\r\n}", "js": "Redwood.controller(\"SubjectCtrl\", [\"$rootScope\", \"$scope\", \"RedwoodSubject\", 'SynchronizedStopWatch', function($rootScope, $scope, rs, SynchronizedStopWatch) {\r\n\r\n    var tick_time = 1;        //tick interval of 0.5s\r\n    var tend = 600;             //number of ticks until game ends\r\n    var time = tend;            //remaining time (deprecated as of 3/23)\r\n    var network = {};           //array of all bidders\r\n    var t = 0;                  //time\r\n\r\n    var just_started = true;    //if player has made a move yet or not\r\n    var landscape_on = false;   //display landscape/potential line\r\n\tvar vfc_for_all = false;    //show vfc values of other subjects\r\n\tvar pot_line;               //landscape/potential line for plotting\r\n\r\n\tvar max_bid;                //max bid\r\n\tvar max_y = 1;              //upper graph bound\r\n\tvar min_y = 0;              //lower bound\r\n\r\n\tvar session_payoff_p = [];    //postitive payoff for entire session\r\n\tvar session_payoff_n = [];    //negative payoffs\r\n\tvar paid = 0;\r\n\r\n\tvar current_period;         //current period\r\n\tvar ct_options;             //continuous graph options\r\n\tvar flow_options;           //flow graph options\r\n\r\n\tvar id = 999;               //subject name\r\n\tvar time_keeper = 999;      //who synchronizes times during rounds\r\n\r\n\tvar chosen = false;         //checks when time keeper has been chosen\r\n\tvar totalBidders = 1;       //var k\r\n\tvar last_bid;               //last submitted bid for subject\r\n\r\n\t//there is always one less slot than total number of bidders\r\n\tvar totalSlots = totalBidders - 1;\r\n\t \r\n\tvar current_slot;           //subject's slot in ad array  \r\n\r\n\tvar ctr = [];               //click through rate of slot i; var a_i\r\n\tvar pay;                    //payoff value for bidder k\r\n\tvar curr_rev;               //current revenue being earned by bidder k\r\n\r\n\tvar vfc = [];               //value for click for bidder k\r\n\tvar gsp = [];               //gsp array\r\n\tvar vcg = [];               //vcg array\r\n\r\n\tvar auction_func = GSP;           // The function used to update costs\r\n\tvar opp_pay_vis_en;\r\n\tvar user_vfc;\r\n\tvar in_group = [];\r\n\tvar waiting = 1;\r\n\r\n\tvar redwood_debug = 0;\r\n\r\n\tvar throttler = 30;\r\n\r\n\t/*\r\n\t  bidder 'k'\r\n\t  slot 'i'\r\n\t  ctr at slot i 'a[i]'\r\n\t  value of click for bidder k 's[k]'\r\n\t*/\r\n\r\n\t/*\r\n\t  b[i+1] = bid of bidder who won next-most desirable slot\r\n\t  a[i] = ctr of slot i \r\n\t*/\r\n\r\n\tfunction GSP() {\r\n\t  var k = 0;\r\n\t  var i = 0;\r\n\r\n\t  while(k < network.bidders.length - 1) {\r\n\t    if(network.bidders[i + 1] === null) {\r\n\t      network.bidders[k].cost = 0;\r\n\t    } else {\r\n\t      var ind = Number(network.bidders[i].ctr * network.bidders[i + 1].bid).toString().indexOf('.');\r\n\r\n\t      if(ind == -1)\r\n\t        network.bidders[k].cost = Number(network.bidders[i].ctr * network.bidders[i + 1].bid);\r\n\t      else\r\n\t        network.bidders[k].cost = Number((network.bidders[i].ctr * network.bidders[i + 1].bid).toPrecision(ind + 2));\r\n\r\n\t      if(network.bidders[k].cost < 0) network.bidders[k].cost = 0;\r\n\t    \r\n\t    }\r\n\t    k++;\r\n\t    i++;\r\n\t  }\r\n\t}\r\n\r\n\t/*\r\n\t  b[i+1] = bid of bidder who won next-most desirable slot\r\n\t  a[i] = ctr of slot i\r\n\t*/\r\n\r\n\tfunction VCG() {\r\n\t    for(var r = 0; r < network.bidders.length; r++) {\r\n\t      network.bidders[r].cost = Number(0);\r\n\t    }\r\n\r\n\t  \tfor(var k = 0; k < network.bidders.length; k++) {\r\n\t    \tfor(var i = k; i < network.bidders.length - 1; i++) {\r\n\t\t      \tif(network.bidders[i + 1].bid === null) {\r\n\t\t\t      \tnetwork.bidders[k].cost = 0;\r\n\t\t      \t} else if(network.bidders[i + 1].ctr === null) {\r\n\t\t\t        network.bidders[k].cost += network.bidders[i].ctr * network.bidders[i + 1].bid;\r\n\t\t      \t} else {\r\n\t\t\t       \tnetwork.bidders[k].cost += network.bidders[i].ctr * network.bidders[i + 1].bid -\r\n\t\t\t        network.bidders[i + 1].ctr * network.bidders[i + 1].bid;\r\n\t\t\t\t}\r\n\t\t    }\r\n\t  \t}\r\n\t}\r\n\r\n\t/*\r\n\t* returns the click through rate times the value per click assigned to bidders\r\n\t*/\r\n\tfunction get_revenue(bidder) {\r\n\t  return Number(bidder.ctr * bidder.vfc);\r\n\t}\r\n\r\n\t//the payoff function is the difference between revenue and cost\r\n\tfunction get_payoff(bidder) {\r\n\t  return Number(bidder.revenue - bidder.cost);\r\n\t}\r\n\r\n\t/*\r\n\t* bubblesort of bids to determine their appropriate slot\r\n\t* runs in O(n^2)\r\n\t*/\r\n\tfunction update_slots() {\r\n\t  if(just_started) return;\r\n\r\n\t  var len = network.bidders.length;\r\n\r\n\t  for(var i = 0; i < len; ++i){\r\n\t    for(var j = 0; j < ((len  - 1) - i); ++j){\r\n\t      if(network.bidders[(len - 1) - j].bid > network.bidders[(len - 1) - (j + 1)].bid) {\r\n\t        var num = network.bidders[(len - 1) - (j + 1)];\r\n\t        \r\n\t        network.bidders[(len - 1) - (j + 1)] = network.bidders[(len - 1) - j];\r\n\t        network.bidders[(len - 1) - j] = num;\r\n\t      }\r\n\t    }   \r\n\t  }\r\n\t  for(var k = 0; k < network.bidders.length; ++k) {\r\n\t    if(k == network.bidders.length - 1){ //force any undefined values to 0\r\n\t      network.bidders[k].payoff = 0;\r\n\t      network.bidders[k].cost = 0;\r\n\t      network.bidders[k].ctr = 0;\r\n\t      network.bidders[k].revenue = 0;\r\n\t      network.bidders[k].current_slot = k;\r\n\t    }else{\r\n\t      network.bidders[k].current_slot = k;\r\n\t      network.bidders[k].ctr = Number(ctr[ctr.length - 1 - k]);\r\n\t    }\r\n\t  }\r\n\t}\r\n\r\n\r\n\t/* returns subject's index in network */\r\n\tfunction get_bidder_by_id(pid){\r\n\t  var t;\r\n\t  for(var i = 0; i < network.bidders.length; ++i) {\r\n\t    if(network.bidders[i].name == pid) t = i;\r\n\t  }\r\n\r\n\t  return t;\r\n\t}\r\n\r\n\t/*\r\n\t* replaces bid amount for specified subject\r\n\t*/\r\n\tfunction replace_bid(id, val){\r\n\t  \tvar i = get_bidder_by_id(id);\r\n\t  \tnetwork.bidders[i].bid = Number(val);\r\n\t}\r\n\t  \r\n\t/* returns unsorted list of each subject's bid */  \r\n\tfunction get_all_bids(){\r\n\t  var tmp = [];\r\n\t  for(var i = 0; i < network.bidders.length; ++i){\r\n\t    tmp[i] = network.bidders[i].bid;\r\n\t  }\r\n\t  \r\n\t  return tmp;\r\n\t}  \r\n\t  \r\n\tfunction get_pot_vals(){\r\n\t  var ind = get_bidder_by_id(id);\r\n\t  var tmp = [];\r\n\t  for(var i = 0; i < ind; ++i){\r\n\t    tmp.push(get_pot_pay(ind, i));\r\n\t  }\r\n\t  tmp.push(network.bidders[ind].payoff);\r\n\t  \r\n\t  for(var j = network.bidders.length - 1; j > ind; --j){\r\n\t    tmp.push(get_pot_pay_n(ind, i));\r\n\t  }\r\n\t  \r\n\t  return tmp;\r\n\t}  \r\n\t  \r\n\t/* returns the potential payoff of a bidder at a new slot */  \r\n\tfunction get_pot_pay(i, j){\r\n\t  return Number((network.bidders[i].vfc * network.bidders[j].ctr) - (network.bidders[j].bid * network.bidders[j].ctr));\r\n\t}\r\n\r\n\tfunction get_pot_pay_n(i, j){\r\n\t  return Number((network.bidders[i].vfc * network.bidders[j].ctr) - (network.bidders[j + 1].bid * network.bidders[j].ctr));\r\n\t}\r\n\t/* returns array of points to be plotted to generate player's potential line */  \r\n\tfunction horizon_line(){\r\n\t  var tmp = [];\r\n\t  var index = get_bidder_by_id(id);\r\n\t  var len = network.bidders.length - 1;\r\n\t  var a = network.bidders.length - 1;\r\n\t  \r\n\t  if(index == a){\r\n\t    --a;\r\n\t    tmp.push([0,network.bidders[len].payoff]);\r\n\t    tmp.push([network.bidders[len - 1].bid, network.bidders[len].payoff]);\r\n\t    tmp.push([network.bidders[len - 1].bid, ]);  \r\n\t  }\r\n\r\n\r\n\t  for(var i = a; i > index; --i){\r\n\t    if(i == len){\r\n\t      tmp.push([0,network.bidders[len].payoff]);\r\n\t      tmp.push([network.bidders[len].bid, network.bidders[len].payoff]);\r\n\t      tmp.push([network.bidders[len].bid, ]); \r\n\t    } else {\r\n\t      tmp.push([network.bidders[i + 1].bid, get_pot_pay_n(index, i)]);\r\n\t      tmp.push([network.bidders[i].bid, get_pot_pay_n(index, i)]);\r\n\t      tmp.push([network.bidders[i].bid, ]);\r\n\t    }\r\n\t  }\r\n\t  \r\n\t  if(index !== 0 && index != len){\r\n\t    tmp.push([network.bidders[i + 1].bid, network.bidders[i].payoff]);\r\n\t    tmp.push([network.bidders[i - 1].bid, network.bidders[i].payoff]);\r\n\t    tmp.push([network.bidders[i - 1].bid, ]);\r\n\t  }\r\n\t  \r\n\t  for(var j = index - 1; j >= 0; --j){\r\n\t    if(j == 0){\r\n\t      tmp.push([network.bidders[j].bid, get_pot_pay(index, j)]);\r\n\t      tmp.push([max_bid, get_pot_pay(index, j)]); \r\n\t    } else {\r\n\t      tmp.push([network.bidders[j].bid, get_pot_pay(index, j)]);\r\n\t      tmp.push([network.bidders[j - 1].bid, get_pot_pay(index, j)]);\r\n\t      tmp.push([network.bidders[j - 1].bid, ]);\r\n\t    }\r\n\t  }\r\n\r\n\t  if(index == 0){        \r\n\t    tmp.push([network.bidders[1].bid, network.bidders[0].payoff]);\r\n\t    tmp.push([max_bid, network.bidders[0].payoff]); \r\n\t  } \r\n\t  \r\n\t  return tmp;\r\n\t}\r\n\r\n\t/* calculate remaining time and display on screen */\r\n\tfunction print_time(){\r\n\t    var tmp_time = (tend - t) / 2; //t increments every 0.5s\r\n\t    var sec, min;\r\n\t    \r\n\t    sec = Math.floor(tmp_time % 60);\r\n\t    min = Math.floor(tmp_time / 60);\r\n\t    if(t <= tend) document.getElementById(\"time_slot\").innerHTML = \"Time Remaining: \" + min + \" Minutes \" + sec + \" Seconds\";\r\n\t    \r\n\t    /* update progress bar */\r\n\t    var percentage = (t/tend)*100;\r\n\r\n\t    $(\"#progressbar\").width(percentage.toString()+\"%\");\r\n\r\n\t}\r\n\r\n\t/* return integral of flow payoff */\r\n\tfunction get_session_points(){\r\n\t  var sum = 0;\r\n\t  \r\n\t  for(var i = 0; i < session_payoff_p.length; ++i){\r\n\t    if(!isNaN(session_payoff_p[i][1])) sum += Number(session_payoff_p[i][1]);\r\n\t  }\r\n\t  \r\n\t  for(var j = 0; j < session_payoff_n.length; ++j){\r\n\t    if(!isNaN(session_payoff_n[j][1])) sum += Number(-1 * Math.abs(session_payoff_n[j][1]));\r\n\t  }\r\n\t  \r\n\t  return Math.floor(sum/tend);\r\n\t}\r\n\r\n\r\n\t  /* returns the highest max_y value since start of round */\r\n \tfunction get_max_y(session_payoff_p, session_payoff_n){\r\n\t    var m = 0;\r\n\t    var i;\r\n\t    for(i = 0; i < session_payoff_p.length; ++i)\r\n\t      if(session_payoff_p[i][1] > m) m = session_payoff_p[i][1];\r\n\t    \r\n\t    var j;\r\n\t    for(j = 0; j < session_payoff_n.length; ++j)\r\n\t      if(Math.abs(session_payoff_n[j][1]) > m) m = Math.abs(session_payoff_n[j][1]);\r\n\t      \r\n\t    return m;\r\n\t  } \r\n\r\n\t/* recalculate graph data for all functions */\r\n\tfunction update_data() {\r\n\r\n\t  for(var i = 0; i < network.bidders.length; ++i){\r\n\t    network.bidders[i].revenue = get_revenue(network.bidders[i]);\r\n\t    network.bidders[i].payoff = get_payoff(network.bidders[i]);\r\n\t  }\r\n\t  auction_func();\r\n\t}\r\n\t\r\n\r\n\trs.on_load(function() {\r\n\t\trs.send(\"config\", {});\r\n\r\n\t\t$scope.clock = SynchronizedStopWatch.instance()\r\n\t\t\t.frequency(tick_time).onTick(tick)\r\n\t\t\t.duration(rs.config.tend).onComplete(function() {\r\n\t\t\t\trs.send(\"new_period\");\r\n\t\t});\r\n\r\n\t\t$scope.clock.start();\r\n\r\n\t\t//prevent user input while period syncs up\r\n\t  \t$('#myModal').modal({\r\n\t    \tbackdrop: 'static',\r\n\t    \tkeyboard: false\r\n\t  \t}); \r\n\t  \t$(\"#myModal\").modal('show');\r\n\t \t\r\n\t \tid = rs.user_id;\r\n\t \tif (!chosen) {\r\n\t  \t\ttime_keeper = rs.subjects[0].user_id;\r\n\t  \t}\r\n\t  \tchosen = true;\r\n\t    group_num = rs._group;\r\n   \r\n\t    num_of_bidders = rs.subjects.length;\r\n\r\n\t  \tfor(var i = 0, l = rs.subjects.length; i < l; i++) {\r\n          in_group.push(parseInt(rs.subjects[i].user_id));\r\n        }\r\n\t      \r\n\t    num_of_players = in_group.length;\r\n\t    \r\n\t    totalSlots = num_of_bidders - 1;\r\n\t    \r\n\t    network.bidders = [];\r\n\t    vfc = rs.config.vfc;\r\n\t    vfc = vfc.split(\",\");\r\n\t    ctr = rs.config.ctr;\r\n\t    ctr = ctr.split(\",\");\r\n\t      \r\n\t    //initialize arrays to predefined values\r\n\t    for(var i = 0; i < num_of_bidders; ++i) {\r\n\t      gsp[i] = 0;\r\n\t      vcg[i] = 0;\r\n\r\n\t      var bidder = {};\r\n\t      bidder.name = in_group[i];\r\n\t      bidder.current_slot = -1;\r\n\t      bidder.bid = 0;\r\n\t      bidder.revenue = 0;\r\n\t      bidder.cost = 0;\r\n\t      bidder.payoff = 0;\r\n\t      //bidder.group = r.group;\r\n\t      \r\n\t      if(vfc[i] === undefined) bidder.vfc = 1;\r\n\t      else bidder.vfc = Number(vfc[i]);\r\n\t      \r\n\t      if(ctr[i] === undefined) bidder.ctr = 1;\r\n\t      else bidder.ctr = Number(ctr[i]);\r\n\t      \r\n\t      network.bidders.push(bidder);\r\n\t    }\r\n\t    \r\n\t    current_period = rs.period;\r\n\r\n\r\n\t    \r\n\t\t/* get new bid from input box */\r\n\t\t$(\"#sub_bid\").click(function(){\r\n\t\t \tvar input = document.getElementById('bidamnt').value;\t\t    \r\n\t\t    document.getElementById('hbid').value = input;\r\n\t\t    if(input != last_bid){\r\n\t\t      var tmp;\t\t      \r\n\t\t      /* check for valid bid */\r\n\t\t      //if(input !== null && input > 0 && last_bid != input) { \r\n\t\t      if(input !== null && last_bid != input && input <= max_bid) { \r\n\t\t        last_bid = input; \r\n\t\t        var new_bid = last_bid;\r\n\t\t        just_started = false;\t\t  \r\n\t\t        rs.send(\"replace_bids\", { new_bid:new_bid, id:id });\r\n\t\t        rs.trigger(\"replace_my_bid\", { new_bid:new_bid, id:id });\r\n\t\t    }\t\t      \r\n\t      \tflow_options.xaxis.ticks = [0,user_vfc, last_bid, max_bid]; \r\n\t  \t\t$(\"[data-slider]\").simpleSlider(\"setValue\", input);\r\n\t      \tupdate_flow_graph();\r\n\t\t    }\r\n\t\t  });\r\n\r\n\t\t$(\"[data-slider]\").each(function () {\r\n\t    \tvar inthis = $(this);\r\n\t\t  \t$(\"<span>\").addClass(\"output\").insertAfter($(this));\r\n\t\t}).bind(\"slider:ready slider:changed\", throttle(function(event, data) {\r\n\t\t    var input = data.value.toFixed(2);\r\n\t\t    if(input !== null && input <= max_bid && t <= tend){\r\n\t\t      \tlast_bid = input; \r\n\t\t      \tvar new_bid = last_bid;\r\n\t\t      \tjust_started = false;\r\n\t\t      \tconsole.log(\"made it\");\r\n\t\t      \trs.send(\"replace_bids\", { new_bid:new_bid, id:id });\r\n\t\t      \trs.trigger(\"replace_my_bid\", { new_bid:new_bid, id:id });\r\n\t\t    }\r\n\t\t    flow_options.xaxis.ticks = [0, user_vfc, last_bid, max_bid]; \r\n\t\t    document.getElementById('bidamnt').value = last_bid;\t\t   \r\n\t\t    update_flow_graph();\r\n\t  \t},throttler));\r\n\r\n\t  \tfunction throttle(func, interval) {\r\n\t\t    var lastCallz = 0;\r\n\t\t    return function() {\r\n\t\t        var nowz = Date.now();\r\n\t\t        if (lastCallz + interval < nowz) {\r\n\t\t            lastCallz = nowz;\r\n\t\t            return func.apply(this, arguments);\r\n\t\t        }\r\n\t\t    };\r\n\t\t}\r\n\t});\r\n\r\n\tfunction update_flow_graph() {\r\n\r\n\t    var subj_pos = [];\r\n\t    //get all other subjects' positions\r\n\t    for(var i = 0; i < network.bidders.length; ++i){\r\n\t      if(opp_pay_vis_en){\r\n\t        if(network.bidders[i].name != id) subj_pos[i] = [network.bidders[i].bid, network.bidders[i].payoff];\r\n\t      }else if(!opp_pay_vis_en){\r\n\t        if(network.bidders[i].name != id) subj_pos[i] = [network.bidders[i].bid, 0];\r\n\t      }\r\n\t    }\r\n\r\n\t    //keep track of last slider position\r\n\t    var bid_pos = [[last_bid, network.bidders[get_bidder_by_id(id)].payoff]];\r\n\t    \r\n\t    var flow_plot = $.plot($(\"#placeholder\"), [\r\n\t      {data:pot_line, color: '#000000', lines:{ show: true }} , \r\n\t      {data:subj_pos, color: '#545454', points:{ show: true, radius: 8, fill: true, fillColor: '#ABABAB' }},\r\n\t      {data:bid_pos, color: '#545454', points:{ show: true, radius: 8, fill: true, fillColor: '#7AAE08' }}\r\n\t    ], flow_options);  \r\n\t}\r\n\r\n\tfunction update_ct_graph() {\r\n\r\n    \tif(just_started){\r\n      \t\tdocument.getElementById(\"arrow\").hidden = true;\r\n      \t\tdocument.getElementById(\"arrow2\").hidden = false;\r\n      \t\tsession_payoff_p.push([t,0]);\r\n    \t} else {\r\n\t      \tif(network.bidders[get_bidder_by_id(id)].payoff < 0){\r\n\t        \tdocument.getElementById(\"arrow\").hidden = false;\r\n\t        \tdocument.getElementById(\"arrow2\").hidden = true;\r\n\r\n\t\t        if(Math.abs(network.bidders[get_bidder_by_id(id)].payoff) >= max_y){\r\n\t\t          flow_options.yaxis.max = Math.abs(network.bidders[get_bidder_by_id(id)].payoff) + Math.abs((network.bidders[get_bidder_by_id(id)].payoff * 0.05));\r\n\t\t          ct_options.yaxis.max = Math.abs(network.bidders[get_bidder_by_id(id)].payoff) + Math.abs((network.bidders[get_bidder_by_id(id)].payoff * 0.05));\r\n\t\t        }\r\n\t        \r\n\t        \t// we want negative payoffs to still be shown above the x axis\r\n\t        \tsession_payoff_n.push([t,Math.abs(network.bidders[get_bidder_by_id(id)].payoff)]);\r\n\t        \tsession_payoff_p.push([t,]);\r\n\t      \t} else {\r\n\t        \tdocument.getElementById(\"arrow\").hidden = true;\r\n\t        \tdocument.getElementById(\"arrow2\").hidden = false;\r\n\r\n\t        \tif(network.bidders[get_bidder_by_id(id)].payoff >= max_y){\r\n\t          \t\tct_options.yaxis.max = network.bidders[get_bidder_by_id(id)].payoff + (network.bidders[get_bidder_by_id(id)].payoff * 0.05);\r\n\t          \t\tflow_options.yaxis.max = network.bidders[get_bidder_by_id(id)].payoff + (network.bidders[get_bidder_by_id(id)].payoff * 0.05);\r\n\t        \t}\r\n\t        \tsession_payoff_p.push([t,Number(network.bidders[get_bidder_by_id(id)].payoff)]);\r\n\t        \tsession_payoff_n.push([t,]);\r\n\t      \t}\r\n    \t} \r\n    \r\n\t    if(session_payoff_p.length > (t + 3)){\r\n\t      for(var i = t; i < session_payoff_p.length; ++i)\r\n\t        session_payoff_p.pop();\r\n\t    }\r\n    \r\n\t    var ct_plot = $.plot($(\"#placeholder2\"), [\r\n\t      { data: session_payoff_p, color: '#009900' },\r\n\t      { data: session_payoff_n, color: '#990000' }], ct_options);  \r\n\r\n\t}\r\n\r\n  \tfunction get_payoffs(){\r\n    \tupdate_slots();\r\n    \tupdate_data();\r\n  \t}\r\n\r\n\tfunction tick() {\r\n\t\tconsole.log(network.bidders);\r\n\t    if(waiting) return;\r\n\t    t++; \r\n\r\n\t    update_slots();\r\n\t    update_data();\r\n\r\n\r\n\t\tct_options.xaxis.ticks = [0, t, tend]; \r\n\r\n\t    if(t < tend) document.getElementById(\"pay_slot\").innerHTML = \"Cumulative Payoff \" + get_session_points();\r\n\t    print_time();\r\n\r\n\t    if(t >= tend){\r\n\t      if(id == time_keeper) rs.send(\"new_period\", { current_period:current_period });\r\n\t    }\r\n\r\n\t\tupdate_slots();\r\n\t\tupdate_data();\r\n\t    update_flow_graph();\r\n    \tupdate_ct_graph();\r\n\t    if (id == time_keeper) {\r\n\t    \trs.send(\"sync_time\",{ t:t });    \r\n        \tvar tmp = network.bidders;\r\n\t      \trs.send(\"sync_net\", { tmp:tmp });  \r\n\t    }\r\n  \t}\r\n\r\n\r\n  \t/* have time keeper update all other subjects */\r\n  \trs.recv(\"sync_net\", function (uid, msg) {\r\n  \t\tconsole.log(msg);\r\n    \tfor(var i = 0; i < network.bidders.length; ++i){\r\n      \t\tnetwork.bidders[i] = msg.tmp[i];\r\n    \t}\r\n  \t});\r\n\r\n  \trs.recv(\"update_points\", function (uid, msg) {\r\n    \tif(msg.points != null) points = msg.points;\r\n  \t});\r\n\r\n  \trs.recv(\"sync_time\", function (uid, msg) {\r\n    \tt = msg.t;\r\n  \t});\r\n  \r\n  \trs.recv(\"pause\", function(uid, msg){\r\n    \twaiting = 1;\r\n  \t});\r\n  \r\n  \trs.recv(\"unpause\", function(uid, msg){\r\n    \twaiting = 0;\r\n  \t});\r\n  \r\n  \trs.recv(\"new_period\", function (uid, msg) {\r\n    \twaiting = 1;\r\n    \tif(paid) rs.set_points(get_session_points(), current_period, id);\r\n    \t$(\"#myModal\").modal('show');    \r\n  \t});\r\n  \r\n \trs.recv(\"change_auction_type\", function(uid, msg) {\r\n    \tif (msg.auction_type == \"GSP\") {\r\n    \t\tauction_func = GSP;\r\n    \t} else if (msg.auction_type == \"VCG\") {\r\n    \t\tauction_func = VCG;\r\n    \t}\r\n  \t});\r\n\r\n  \t/* enter new subject bid */\r\n  \trs.recv(\"replace_bids\", function(uid, msg) {\r\n  \t\tconsole.log(\"replacing other's bids\");\r\n    \tif(msg.new_bid !== null && msg.new_bid <= max_bid){\r\n\t      \treplace_bid(msg.id, Number(msg.new_bid).toFixed(2));\r\n    \t}\r\n  \t});\r\n\r\n  \trs.on(\"replace_my_bid\", function(msg) {\r\n  \t\tconsole.log(\"replacing my bid\");\r\n    \tif(msg.new_bid !== null && msg.new_bid <= max_bid){\r\n\t      \treplace_bid(msg.id, Number(msg.new_bid).toFixed(2));\r\n    \t}\r\n  \t});\r\n  \r\n  \trs.recv(\"override_sync\", function(uid, msg){\r\n    \tif(msg.new_keep != \"\" && msg.new_keep != undefined && msg.new_keep != null && rs._group == msg.group)\r\n      \ttime_keeper = msg.new_keep;\r\n  \t});\r\n  \r\n  \trs.recv(\"r_debug\", function(uid, msg){\r\n\r\n    \tredwood_debug = msg.debug;\r\n    \tjust_started = msg.start;\r\n  \t}); \r\n  \r\n  \t/* set up our config values */\r\n  \trs.recv(\"config\", function(uid, msg) {\r\n    \tchosen = true;\r\n    \ttend = rs.config.tend;\r\n    \tmax_y = rs.config.max_y;\r\n    \tmin_y = rs.config.min_y;  \t\t\t\r\n    \tvfc = rs.config.vfc;\r\n    \tvfc = vfc.split(\",\");    \r\n    \tctr = rs.config.ctr;\r\n    \tctr = ctr.split(\",\");    \r\n    \tmax_bid = rs.config.max_bid;\r\n    \tlandscape_on = rs.config.en_landscape;\r\n    \tvfc_for_all = rs.config.en_vfc;\r\n\r\n    \tct_options =  {\r\n\t      \tseries: { shadowSize: 0 },\r\n\t      \tlines: { fill: true },\r\n\t      \tyaxis: { min: min_y, max: max_y + 50, ticks: 14},\r\n\t      \txaxis: { min: 0, max: tend }\r\n    \t}; \r\n\r\n\t    flow_options = {\r\n\t      series: { shadowSize: 0, lines:{ show: false }},\r\n\t      yaxis: { min: min_y, max: max_y, ticks: 14, position: \"right\" },\r\n\t      xaxis: { min: 0, max: max_bid, ticks:[0,max_bid] }\r\n\t    };   \r\n\r\n\t    flow_options.xaxis.max = max_bid;\r\n\t    opp_pay_vis_en = rs.config.opp_pay_vis;\r\n\t    paid = rs.config.paid_session;\r\n\t    update_flow_graph();\r\n\t    update_ct_graph();\r\n    \r\n    \tvar len = network.bidders.length;\r\n    \tfor(var i = 0;i < len; ++i){\r\n      \t\tif(network.bidders[i].name === undefined) network.bidders.pop();\r\n    \t}\r\n\r\n\t    user_vfc = network.bidders[get_bidder_by_id(id)].vfc;\r\n\t    document.getElementById(\"vpc_slot\").innerHTML = \"Value per Item: \" + user_vfc;\r\n\t    flow_options.xaxis.ticks = [0, user_vfc, last_bid, max_bid]; \r\n\t    if(vfc_for_all) document.getElementById(\"all_vpc\").innerHTML = \"Others' Values Per Item: \" + vfc;\r\n\t    document.getElementById(\"ctr_slot\").innerHTML = \"Items per Bundle: \" + ctr; \r\n\r\n\t    rs.send(\"setup\", { chosen:chosen, time_keeper:time_keeper });\r\n  \t});\r\n  \r\n  \trs.recv(\"setup\", function(uid, msg) {\r\n\r\n    \tif(msg.chosen !== null) chosen = msg.chosen;\r\n    \tif(msg.time_keeper !== null) time_keeper = msg.time_keeper;\r\n    \t$(\"#myModal\").modal('hide');\r\n    \twaiting = 0;\r\n\r\n  \t});\r\n\r\n}]);\r\n\r\n"}, "model": "expecon.page", "pk": 5}, {"fields": {"experiment": 2, "html": "{% load verbatim %}\r\n<!DOCTYPE HTML>\r\n<html ng-app=\"Redwood\">\r\n\t<head>\r\n\t\t<title>Finish</title>\r\n\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/jquery/jquery.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/bootstrap/bootstrap-3.1.1.min.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/lib/angular/angular-1.2.16.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodCore.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodHelpers.js\"></script>\r\n\t\t<script type=\"text/javascript\" src=\"{{ STATIC_URL }}framework/js/redwoodSubject.js\"></script>\r\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"{{ STATIC_URL }}framework/css/bootstrap-3.1.1.min.css\"></link>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t\t{{ js }}\r\n\t\t</script>\r\n\t\t<style type=\"text/css\">\r\n\t\t\t{{ css }}\r\n\t\t</style>\r\n\t</head>\r\n{% verbatim %}\r\n\t<body ng-controller=\"SubjectCtrl\">\r\n\t\t\r\n\t\t<div class=\"navbar navbar-fixed-top container\">\r\n\t\t\t<div class=\"navbar navbar-default\" style=\"margin-bottom: 0;\">\r\n\t\t\t\t<div class=\"navbar-brand\" href=\"#\">Economics Experiment</div>\r\n\t\t\t\t<ul class=\"nav navbar-nav\">\r\n\t\t\t\t\t<li class=\"active\">\r\n\t\t\t\t\t\t<a>User ID: <span>{{ $root.user_id }}</span></a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"container\">\r\n\t\t\t<table class=\"table table-bordered table-condensed\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr><th>Period</th><th>Points</th><th>Earnings</th></tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody id=\"results\">\r\n\t\t\t\t\t<tr ng-repeat=\"points in pointsByPeriod track by $index\">\r\n\t\t\t\t\t\t<td>{{ $index + 1 }}</td><td>{{ points | number:2 }}</td><td>${{ points | number:2 }}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr class=\"warning\">\r\n\t\t\t\t\t\t<td>Average:</td><td>{{ ($root.totalPoints / ($root.period - 1) || 0) | number:2 }}</td><td>${{ ($root.totalPoints / ($root.period - 1) || 0) | number:2 }}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr class=\"success\">\r\n\t\t\t\t\t\t<td>Total:</td><td>{{ $root.totalPoints | number:2 }}</td><td>${{ $root.totalPoints | number:2 }}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t</body>\r\n{% endverbatim %}\r\n</html>\r\n\r\n", "name": "Finish", "css": "body {\r\n  padding-top: 60px;\r\n}\r\n\r\n", "js": "Redwood.controller(\"SubjectCtrl\", [\"$rootScope\", \"$scope\", \"RedwoodSubject\", function($rootScope, $scope, rs) {\r\n\trs.on_load(function() {\r\n\t\t$scope.pointsByPeriod = rs.subject[rs.user_id].points_by_period();\r\n\t\t$scope.pointsByPeriod.shift();\r\n\t});\r\n}]);\r\n\r\n"}, "model": "expecon.page", "pk": 6}]